{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.2",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "full-stack-pattern!",
  "docComment": "",
  "name": "full-stack-pattern",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "full-stack-pattern!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!Api:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Api extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Api",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!Api:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Api` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiProps",
                  "canonicalReference": "full-stack-pattern!ApiProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Api#addLambda:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addLambda({ method, path, lambda, options }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        method: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpMethod",
                  "canonicalReference": "full-stack-pattern!HttpMethod:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        path: string;\n        lambda: "
                },
                {
                  "kind": "Reference",
                  "text": "Lambda",
                  "canonicalReference": "full-stack-pattern!Lambda:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Mutable",
                  "canonicalReference": "full-stack-pattern!Mutable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IntegrationOptions",
                  "canonicalReference": "@aws-cdk/aws-apigateway!IntegrationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "MethodOptions",
                  "canonicalReference": "@aws-cdk/aws-apigateway!MethodOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ method, path, lambda, options }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 12
                  }
                }
              ],
              "name": "addLambda"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Api#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api: "
                },
                {
                  "kind": "Reference",
                  "text": "RestApi",
                  "canonicalReference": "@aws-cdk/aws-apigateway!RestApi:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Api#attachCognitoAuthorizer:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachCognitoAuthorizer(userPool: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPool:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userPool",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "attachCognitoAuthorizer"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ApiEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ApiEvent "
            }
          ],
          "releaseTag": "Public",
          "name": "ApiEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiEvent#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpMethod",
                  "canonicalReference": "full-stack-pattern!HttpMethod:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiEvent#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "Mutable",
                  "canonicalReference": "full-stack-pattern!Mutable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MethodOptions",
                  "canonicalReference": "@aws-cdk/aws-apigateway!MethodOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "LambdaIntegrationOptions",
                  "canonicalReference": "@aws-cdk/aws-apigateway!LambdaIntegrationOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiEvent#path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ApiProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ApiProps extends "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RestApiProps",
              "canonicalReference": "@aws-cdk/aws-apigateway!RestApiProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'restApiName'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "ApiProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#buildDevServer:member",
              "docComment": "/**\n * Uses `convert-lambda-to-express` to provision a dev server to develop the api.\n *\n * See [convert-lambda-to-express](https://www.npmjs.com/package/convert-lambda-to-express) for more information about how to use this feature.\n *\n * @default true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildDevServer?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildDevServer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#gatewayResponses:member",
              "docComment": "/**\n * Gateway responses to add to the api. By default the following responses are added: { type: ResponseType.UNAUTHORIZED, statusCode: '401' } { type: ResponseType.ACCESS_DENIED, statusCode: '403' } { type: ResponseType.RESOURCE_NOT_FOUND, statusCode: '404' } { type: ResponseType.DEFAULT_5XX, statusCode: '500' }\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gatewayResponses?: "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayResponseOptions",
                  "canonicalReference": "@aws-cdk/aws-apigateway!GatewayResponseOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gatewayResponses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#logicalId:member",
              "docComment": "/**\n * LogicalId for the RestApi resource for in-place upgrades. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#name:member",
              "docComment": "/**\n * The name of the api. If `prefix` and `name` are provided then the apiName will be `${prefix}-${name}`. If no prefix is provided then the apiName will be `name`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#prefix:member",
              "docComment": "/**\n * The prefix to use with resource names. If `prefix` and `name` are provided then the apiName will be `${prefix}-${name}`. If no name is provided then the apiName will be `prefix`. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#stage:member",
              "docComment": "/**\n * The api stage name. This is an alias to the deployOptions.stageName.\n *\n * @default \"prod\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ApiProps#userPool:member",
              "docComment": "/**\n * UserPool to create a gateway authorizer. It is not required to be added when running the constructor. Can also add a cognito authorizer with the api.attachCognitoAuthorizer() method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPool:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!AsyncCoreNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AsyncCoreNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "CoreNestedStackProps",
              "canonicalReference": "full-stack-pattern!CoreNestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncCoreNestedStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!AsyncCoreNestedStackProps#env:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "env: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Environment",
                  "canonicalReference": "@aws-cdk/core!Environment:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "env",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!AsyncCoreNestedStackProps#profile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "profile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!AsyncCoreStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AsyncCoreStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "CoreStackProps",
              "canonicalReference": "full-stack-pattern!CoreStackProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AsyncCoreStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!AsyncCoreStackProps#profile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "profile: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "profile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!bucketExists:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "bucketExists: "
            },
            {
              "kind": "Content",
              "text": "({ bucketName, profile, region }: {\n    profile?: string | undefined;\n    region?: string | undefined;\n    bucketName: string;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            }
          ],
          "releaseTag": "Public",
          "name": "bucketExists",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!buildLayer:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function buildLayer({ pkgJsonPath, pathToDist }: "
            },
            {
              "kind": "Content",
              "text": "{\n    pkgJsonPath: string;\n    pathToDist?: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ pkgJsonPath, pathToDist }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "buildLayer"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!buildUrls:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function buildUrls({ stage, subDomain, "
            },
            {
              "kind": "Reference",
              "text": "baseDomain",
              "canonicalReference": "full-stack-pattern!~__type#baseDomain"
            },
            {
              "kind": "Content",
              "text": ": baseDomain, buildWwwSubdomain }: "
            },
            {
              "kind": "Content",
              "text": "{\n    baseDomain: string;\n    subDomain: string;\n    stage?: string;\n    buildWwwSubdomain?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[string, string] | [string]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ stage, subDomain, baseDomain: baseDomain, buildWwwSubdomain }",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "buildUrls"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!capitalizeFirstLetter:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function capitalizeFirstLetter(segment: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "segment",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "capitalizeFirstLetter"
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CDNConstruct:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CDNConstruct extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNConstruct",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CDNConstruct:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CDNConstruct` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNConstructProps",
                  "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNConstruct#bucket:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucket: "
                },
                {
                  "kind": "Reference",
                  "text": "IBucket",
                  "canonicalReference": "@aws-cdk/aws-s3!IBucket:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bucket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNConstruct#distribution:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distribution: "
                },
                {
                  "kind": "Reference",
                  "text": "CloudFrontWebDistribution",
                  "canonicalReference": "@aws-cdk/aws-cloudfront!CloudFrontWebDistribution:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "distribution",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNConstruct.getBucketName:member",
              "docComment": "/**\n * Exposes the algorithm that is used to generate the bucket name from the construct `props`. Useful if you need to know the bucket name for other constructs and are getting a circular dependency error when importing the IBucket. Gotta love chicken and the egg ala cdk.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getBucketName: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "GetBucketNameProps",
                  "canonicalReference": "full-stack-pattern!~GetBucketNameProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getBucketName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": true
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!CDNConstruct.lookupExistingResources:member(1)",
              "docComment": "/**\n * This is a helper function to avoid resource collisions during development. When buckets get left behind, rebuilding the stack throws an error. Does a lookup for the bucket that is going to get built and adds `props.bucketName` and `props.useExistingBucket = true` to the props and returns the full props object to be used with `new CDNConstruct()`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lookupExistingResources(props: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNConstructProps",
                  "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        region: string;\n        profile?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CDNConstructProps",
                  "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "lookupExistingResources"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNConstruct#urls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urls?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<typeof "
                },
                {
                  "kind": "Reference",
                  "text": "buildUrls",
                  "canonicalReference": "full-stack-pattern!buildUrls:function"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "urls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CDNConstructProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CDNConstructProps "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNConstructProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        restApi: "
                },
                {
                  "kind": "Reference",
                  "text": "IRestApi",
                  "canonicalReference": "@aws-cdk/aws-apigateway!IRestApi:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        apiStage?: string;\n        apiPathPattern?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#baseDomain:member",
              "docComment": "/**\n * Allows hosting at a custom, non-cloudfront, url. The root domain of the website that is being hosted without the sub-domain. ie. `example.com`. If provided, must also provide a value for `stage`, `hostedZone` and `certificate`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#bucketName:member",
              "docComment": "/**\n * Set the bucketName\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucketName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bucketName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#bucketProps:member",
              "docComment": "/**\n * Optional. If creating the hosting bucket, these props will be passed to the Bucket construct. To set removal policy use `CDNConstructProps.removalPolicy`. When removalPolicy is set to DESTROY, which is the default behavior, autoDeleteObjects will be enabled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucketProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Mutable",
                  "canonicalReference": "full-stack-pattern!Mutable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BucketProps",
                  "canonicalReference": "@aws-cdk/aws-s3!BucketProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">, 'removalPolicy' | 'autoDeleteObjects'>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bucketProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#buildWwwSubdomain:member",
              "docComment": "/**\n * will build www.{rootDomain} alias on `prod` stage in addition to the naked rootDomain. For non-production stages, this is a no-op.\n *\n * @default true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildWwwSubdomain?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "buildWwwSubdomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#certificate:member",
              "docComment": "/**\n * The TLS/SSL certificate to use for the distribution.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificate?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICertificate",
                  "canonicalReference": "@aws-cdk/aws-certificatemanager!ICertificate:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "certificate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#codeDeploymentProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "codeDeploymentProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BucketDeploymentProps",
                  "canonicalReference": "@aws-cdk/aws-s3-deployment!BucketDeploymentProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'sources' | 'destinationBucket' | 'distribution'>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "codeDeploymentProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#codePaths:member",
              "docComment": "/**\n * The absolute paths for the code that will be uploaded and hosted via S3/CloudFront.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "codePaths: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "codePaths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#distributionProps:member",
              "docComment": "/**\n * Optional. Props that will get passed to the WebDistribution construct.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distributionProps?: "
                },
                {
                  "kind": "Reference",
                  "text": "Mutable",
                  "canonicalReference": "full-stack-pattern!Mutable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CloudFrontWebDistributionProps",
                  "canonicalReference": "@aws-cdk/aws-cloudfront!CloudFrontWebDistributionProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "> & {\n        logicalId?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "distributionProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#hostedZone:member",
              "docComment": "/**\n * HostedZone to add Distribution AliasRecords to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZone?: "
                },
                {
                  "kind": "Reference",
                  "text": "IHostedZone",
                  "canonicalReference": "@aws-cdk/aws-route53!IHostedZone:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hostedZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#noBucketPolicy:member",
              "docComment": "/**\n * This is for accounts/clients that have high security and restrict making bucket policies. Has no effect unless `props.useExistingBucket = true`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noBucketPolicy?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noBucketPolicy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#prefix:member",
              "docComment": "/**\n * The prefix to use for the resources. Will prefix all resource names with this value. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#removalPolicy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removalPolicy?: "
                },
                {
                  "kind": "Reference",
                  "text": "RemovalPolicy",
                  "canonicalReference": "@aws-cdk/core!RemovalPolicy:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "removalPolicy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#stage:member",
              "docComment": "/**\n * The stage of the website that is being hosted. ex. Using `qa` as the stage will host the site at the sub-domain `qa.example.com`. When the stage is prod a naked domain will be used and the `buildWwwSubdomain` property will be checked. If `true` the `www` sub-domain will also be built. ex. `www.example.com` and `example.com` will both be valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNConstructProps#useExistingBucket:member",
              "docComment": "/**\n * This is for accounts/clients that have high security and restrict making buckets. Also helpful during development and forget to delete a bucket. Will not throw and error when deploying. Sets up a BucketPolicy for access to the existing bucket. When set to `true`, you must also provide the `bucketName`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useExistingBucket?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "useExistingBucket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CDNNestedStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CDNNestedStack extends "
            },
            {
              "kind": "Reference",
              "text": "NestedStack",
              "canonicalReference": "@aws-cdk/core!NestedStack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNNestedStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CDNNestedStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CDNNestedStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNNestedStackProps",
                  "canonicalReference": "full-stack-pattern!CDNNestedStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNNestedStack#bucket:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucket: "
                },
                {
                  "kind": "Reference",
                  "text": "IBucket",
                  "canonicalReference": "@aws-cdk/aws-s3!IBucket:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bucket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNNestedStack#distribution:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distribution: "
                },
                {
                  "kind": "Reference",
                  "text": "CloudFrontWebDistribution",
                  "canonicalReference": "@aws-cdk/aws-cloudfront!CloudFrontWebDistribution:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "distribution",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNNestedStack#urls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urls?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "urls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CDNNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CDNNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedStackProps",
              "canonicalReference": "@aws-cdk/core!NestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'removalPolicy' | 'timeout'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CDNConstructProps",
              "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNNestedStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CDNNestedStackProps#stackTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackTimeout?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "@aws-cdk/core!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stackTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CDNStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CDNStack extends "
            },
            {
              "kind": "Reference",
              "text": "Stack",
              "canonicalReference": "@aws-cdk/core!Stack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CDNStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CDNStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNStackProps",
                  "canonicalReference": "full-stack-pattern!CDNStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNStack#bucket:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucket: "
                },
                {
                  "kind": "Reference",
                  "text": "IBucket",
                  "canonicalReference": "@aws-cdk/aws-s3!IBucket:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bucket",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNStack#distribution:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distribution: "
                },
                {
                  "kind": "Reference",
                  "text": "CloudFrontWebDistribution",
                  "canonicalReference": "@aws-cdk/aws-cloudfront!CloudFrontWebDistribution:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "distribution",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CDNStack#urls:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urls?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "urls",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CDNStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CDNStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "StackProps",
              "canonicalReference": "@aws-cdk/core!StackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CDNConstructProps",
              "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CDNStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!codeBuildHasCredentials:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "codeBuildHasCredentials: "
            },
            {
              "kind": "Content",
              "text": "({ profile, region, sourceType }: {\n    profile?: string | undefined;\n    region: string;\n    sourceType: "
            },
            {
              "kind": "Reference",
              "text": "source",
              "canonicalReference": "full-stack-pattern!~source:type"
            },
            {
              "kind": "Content",
              "text": ";\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<boolean>"
            }
          ],
          "releaseTag": "Public",
          "name": "codeBuildHasCredentials",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CognitoConstruct:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CognitoConstruct extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoConstruct",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CognitoConstruct:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CognitoConstruct` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoConstructProps",
                  "canonicalReference": "full-stack-pattern!CognitoConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#addGroup:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addGroup({ groupName, logicalId, policyStatements, role, noIam, userEmails }: "
                },
                {
                  "kind": "Reference",
                  "text": "GroupConfig",
                  "canonicalReference": "full-stack-pattern!~GroupConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ groupName, logicalId, policyStatements, role, noIam, userEmails }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addGroup"
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#addUser:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addUser({ userEmail, groupNames }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        userEmail: string;\n        groupNames?: string[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CfnUserPoolUser",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnUserPoolUser:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ userEmail, groupNames }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addUser"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#authenticatedRole:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticatedRole?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticatedRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#groups:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [groupName: string]: {\n            group: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnUserPoolGroup",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnUserPoolGroup:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#identityPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identityPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnIdentityPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnIdentityPool:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "identityPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#userPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPool: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPool:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#userPoolClient:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolClient: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPoolClient",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPoolClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPoolClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoConstruct#userPoolDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolDomain?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnUserPoolDomain",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnUserPoolDomain:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CognitoConstructProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CognitoConstructProps "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoConstructProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#authenticatedPolicyStatements:member",
              "docComment": "/**\n * PolicyStatements to attach when building an AuthenticatedRole. If an authenticatedRole is not provided, one will be created. If the IdentityPool is not created, this will trigger the creation of one and associate the authenticatedRole\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticatedPolicyStatements?: "
                },
                {
                  "kind": "Reference",
                  "text": "PolicyStatement",
                  "canonicalReference": "@aws-cdk/aws-iam!PolicyStatement:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticatedPolicyStatements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#authenticatedRole:member",
              "docComment": "/**\n * Takes an IRole or an arn instead of building an AuthenticatedRole when an IdentityPool is created. If IdentityPool is not created, this will trigger the creation of one and associate this role\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticatedRole?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticatedRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#css:member",
              "docComment": "/**\n * CSS string to be used for the user pool UI customization. For more info see [Cognito UI Customizations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpooluicustomizationattachment.html#cfn-cognito-userpooluicustomizationattachment-css)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "css?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "css",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#groups:member",
              "docComment": "/**\n * Create groups for the user pool and, optionally, the identity pool\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups?: "
                },
                {
                  "kind": "Reference",
                  "text": "GroupConfig",
                  "canonicalReference": "full-stack-pattern!~GroupConfig:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#identityPool:member",
              "docComment": "/**\n * Full configuration of the IdentityPool that will be created in addition to having control over the logicalId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identityPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "IdentityPoolConfig",
                  "canonicalReference": "full-stack-pattern!~IdentityPoolConfig:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "WithLogicalId",
                  "canonicalReference": "full-stack-pattern!~WithLogicalId:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "identityPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#prefix:member",
              "docComment": "/**\n * The prefix to use with resource names. If `prefix` and `name` are provided then the apiName will be `${prefix}-${name}`. If no name is provided then the apiName will be `prefix`. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#removalPolicy:member",
              "docComment": "/**\n * RemovalPolicy to apply to all resources. If a RemovalPolicy prop is provided for a specific resource, ie the `props.userPool.removalPolicy`, it will override this value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removalPolicy?: "
                },
                {
                  "kind": "Reference",
                  "text": "RemovalPolicy",
                  "canonicalReference": "@aws-cdk/core!RemovalPolicy:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "removalPolicy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#userPool:member",
              "docComment": "/**\n * Full configuration of the UserPool that will be created in addition to having control over the logicalId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserPoolProps",
                  "canonicalReference": "@aws-cdk/aws-cognito!UserPoolProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "WithLogicalId",
                  "canonicalReference": "full-stack-pattern!~WithLogicalId:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#userPoolClient:member",
              "docComment": "/**\n * Full configuration of the UserPoolClient that will be created in addition to having control over the logicalId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolClient?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserPoolClientProps",
                  "canonicalReference": "@aws-cdk/aws-cognito!UserPoolClientProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'userPool'> & "
                },
                {
                  "kind": "Reference",
                  "text": "WithLogicalId",
                  "canonicalReference": "full-stack-pattern!~WithLogicalId:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#userPoolClientId:member",
              "docComment": "/**\n * Will reuse an existing UserPoolClient by passing in the `userPoolClientId` Will ignore the `userPoolClient` prop when using an existing UserPoolClient\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolClientId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolClientId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#userPoolDomain:member",
              "docComment": "/**\n * Full configuration of the UserPoolDomain that will be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolDomain?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserPoolDomainProps",
                  "canonicalReference": "full-stack-pattern!~UserPoolDomainProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#userPoolId:member",
              "docComment": "/**\n * Will reuse an existing UserPool by passing in the `userPoolId`. Will ignore the `userPool` prop when using an existing UserPool\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps#users:member",
              "docComment": "/**\n * Will provision the users in the UserPool. Sets userEmail as the username and optionally attaches the user to any number of groups\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "users?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        userEmail: string;\n        groupNames: string[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "users",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CognitoNestedStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CognitoNestedStack extends "
            },
            {
              "kind": "Reference",
              "text": "NestedStack",
              "canonicalReference": "@aws-cdk/core!NestedStack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoNestedStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CognitoNestedStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoNestedStackProps",
                  "canonicalReference": "full-stack-pattern!CognitoNestedStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#authenticatedRole:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticatedRole?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticatedRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#groups:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoConstruct",
                  "canonicalReference": "full-stack-pattern!CognitoConstruct:class"
                },
                {
                  "kind": "Content",
                  "text": "['groups']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#identityPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identityPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnIdentityPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnIdentityPool:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "identityPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#userPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPool: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPool:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#userPoolClient:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolClient: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPoolClient",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPoolClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPoolClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoNestedStack#userPoolDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolDomain?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnUserPoolDomain",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnUserPoolDomain:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CognitoNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CognitoNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedStackProps",
              "canonicalReference": "@aws-cdk/core!NestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'removalPolicy' | 'timeout'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CognitoConstructProps",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoNestedStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CognitoNestedStackProps#stackTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackTimeout?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "@aws-cdk/core!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stackTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CognitoStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CognitoStack extends "
            },
            {
              "kind": "Reference",
              "text": "Stack",
              "canonicalReference": "@aws-cdk/core!Stack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CognitoStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CognitoStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoStackProps",
                  "canonicalReference": "full-stack-pattern!CognitoStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#authenticatedRole:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authenticatedRole?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authenticatedRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#groups:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groups: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoConstruct",
                  "canonicalReference": "full-stack-pattern!CognitoConstruct:class"
                },
                {
                  "kind": "Content",
                  "text": "['groups']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "groups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#identityPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identityPool?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnIdentityPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnIdentityPool:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "identityPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#userPool:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPool: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPool",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPool:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#userPoolClient:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolClient: "
                },
                {
                  "kind": "Reference",
                  "text": "IUserPoolClient",
                  "canonicalReference": "@aws-cdk/aws-cognito!IUserPoolClient:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userPoolClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CognitoStack#userPoolDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userPoolDomain?: "
                },
                {
                  "kind": "Reference",
                  "text": "CfnUserPoolDomain",
                  "canonicalReference": "@aws-cdk/aws-cognito!CfnUserPoolDomain:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userPoolDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CognitoStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CognitoStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "StackProps",
              "canonicalReference": "@aws-cdk/core!StackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CognitoConstructProps",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CognitoStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!ConfigFile:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ConfigFile<T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ConfigFile",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!ConfigFile:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ConfigFile` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFileProps",
                  "canonicalReference": "full-stack-pattern!ConfigFileProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!ConfigFile#getServiceToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getServiceToken(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getServiceToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 4,
            "endIndex": 6
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!ConfigFileProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ConfigFileProps<T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ConfigFileProviderProps",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": "<T>, 'bucketName'> & {\n    bucket: "
            },
            {
              "kind": "Reference",
              "text": "IBucket",
              "canonicalReference": "@aws-cdk/aws-s3!IBucket:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    prefix?: string;\n    env?: "
            },
            {
              "kind": "Reference",
              "text": "Environment",
              "canonicalReference": "@aws-cdk/core!Environment:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    deploymentRole?: "
            },
            {
              "kind": "Reference",
              "text": "IRole",
              "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
            },
            {
              "kind": "Content",
              "text": " | string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ConfigFileProps",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 14
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ConfigFileProviderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ConfigFileProviderProps<T extends "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ConfigFileProviderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps#bucketName:member",
              "docComment": "/**\n * The bucketName of where to upload the file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bucketName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bucketName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps#config:member",
              "docComment": "/**\n * The actual configuration that will get turned into the file. Library\n *\n * - uses YAML.stringify(config) for .yaml and .yml files - uses JSON.stringify(config) for .json files - creates a js file by stringifying the object with JSON.stringify and wrapping it with `var CONFIG_FILE = JSON.parse('${stringified}');`. Makes it globally available to the code in the browser via <head><script type=\"text/javascript\" src=\"/config.js\" /></head>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps#fileName:member",
              "docComment": "/**\n * The filename for the config file. Supports .yml, .yaml, .json, or .js extensions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fileName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fileName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps#jsExportName:member",
              "docComment": "/**\n * When filename ends in .js a file is built to export the config object into the global js scope. The sets the export name within the js file\n *\n * @default CONFIG_FILE\n *\n * @example\n *\n * `var CONFIG_FILE = JSON.parse('${stringified}');` but can be any value you would like `var MY_CUSTOM_EXPORT_NAME_IS_GUARANTEED_UNIQUE = JSON.parse(...);`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "jsExportName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "jsExportName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ConfigFileProviderProps#mergeExisting:member",
              "docComment": "/**\n * Will go to the file in S3 and merge the passed configuration with the existing configuration that is already in the file in S3. Useful when only part of the config changes by environment but the rest is fixed and complex\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mergeExisting?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mergeExisting",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CoreConstruct:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoreConstruct extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreConstruct",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CoreConstruct:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoreConstruct` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreConstructProps",
                  "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreConstruct#baseDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseDomain: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "baseDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreConstruct#certificate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificate: "
                },
                {
                  "kind": "Reference",
                  "text": "ICertificate",
                  "canonicalReference": "@aws-cdk/aws-certificatemanager!ICertificate:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "certificate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!CoreConstruct.getBaseDomain:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getBaseDomain(props: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rootDomain: string;\n        subDomain?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getBaseDomain"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreConstruct#hostedZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZone: "
                },
                {
                  "kind": "Reference",
                  "text": "IHostedZone",
                  "canonicalReference": "@aws-cdk/aws-route53!IHostedZone:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostedZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!CoreConstruct.lookupExistingResources:member(1)",
              "docComment": "/**\n * Will lookup the hostedZoneId and the certificateArn for the provided rootDomain. If a HostedZone is found for rootDomain the id is added to props.hostedZoneId. If a Certificate is found for the rootDomain the certificateArn is added to props.certificateArn. This makes it easy to pass the returned props to the CoreConstruct constructor function.\n *\n * Must provide a region to search and optionally can provide a profile to use (uses profile/credentials in ~/.aws/credentials) for the lookup\n *\n * @returns {Promise<CoreConstructProps>}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lookupExistingResources(props: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreConstructProps",
                  "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        region: string;\n        profile?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CoreConstructProps",
                  "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "lookupExistingResources"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CoreConstructProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CoreConstructProps extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HostedZoneProps",
              "canonicalReference": "@aws-cdk/aws-route53!HostedZoneProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'zoneName'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CertificateProps",
              "canonicalReference": "@aws-cdk/aws-certificatemanager!CertificateProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'domainName' | 'validation'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreConstructProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#certificateArn:member",
              "docComment": "/**\n * Option to use an existing certificate for TLS/SSL\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificateArn?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "certificateArn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#hostedZoneId:member",
              "docComment": "/**\n * When adding records to an existing HostedZone, pass in the hostedZoneId and records for all the other stacks will get added to the targeted zone\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZoneId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hostedZoneId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#includeStarSubdomain:member",
              "docComment": "/**\n * When building the certificate this will add a wildcard subDomain to the rootDomain so that all subDomains will be able to use the certificate. If you would like to specify which subDomains should be included use the `props.subjectAlternativeNames` instead. When passing in the certificateArn a certificate will not be created and this will be ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includeStarSubdomain?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "includeStarSubdomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#removalPolicy:member",
              "docComment": "/**\n * RemovalPolicy to apply to all resources. If a RemovalPolicy prop is provided for a specific resource, ie the `props.userPool.removalPolicy`, it will override this value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removalPolicy?: "
                },
                {
                  "kind": "Reference",
                  "text": "RemovalPolicy",
                  "canonicalReference": "@aws-cdk/core!RemovalPolicy:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "removalPolicy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#rootDomain:member",
              "docComment": "/**\n * The url/rootDomain for the HostedZone\n *\n * @example\n *\n * If you are hosting the ui at `www.example.com` and the api at `api.example.com` the rootDomain would be `example.com` This is similar for branches, such as `dev.api.example.com` and `dev.example.com`. The rootDomain will still be `example.com`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootDomain: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rootDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreConstructProps#subDomain:member",
              "docComment": "/**\n * Optional: A url subDomain to host the application at. Will still use the HostedZone at rootDomain but all of this application will be hosted at the subDomain\n *\n * Assume your HostedZone is at `rootDomain: \"example.com\"` and you want to host at `subDomain: \"best-app\"`\n *\n * This subDomain is the new \"default\" root of the application - the UI will be at `best-app.example.com` and the dev branch will be at `dev.best-app.example.com`. Optionally you can build `www.best-app.example.com`\n *\n * - The Api will be at `api.best-app.example.com` and the dev api will be at `dev.api.best-app.example.com`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CoreNestedStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoreNestedStack extends "
            },
            {
              "kind": "Reference",
              "text": "NestedStack",
              "canonicalReference": "@aws-cdk/core!NestedStack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreNestedStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CoreNestedStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoreNestedStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreNestedStackProps",
                  "canonicalReference": "full-stack-pattern!CoreNestedStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreNestedStack#certificate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificate: "
                },
                {
                  "kind": "Reference",
                  "text": "ICertificate",
                  "canonicalReference": "@aws-cdk/aws-certificatemanager!ICertificate:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "certificate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreNestedStack#hostedZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZone: "
                },
                {
                  "kind": "Reference",
                  "text": "IHostedZone",
                  "canonicalReference": "@aws-cdk/aws-route53!IHostedZone:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostedZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CoreNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CoreNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedStackProps",
              "canonicalReference": "@aws-cdk/core!NestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'removalPolicy' | 'timeout'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CoreConstructProps",
              "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreNestedStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!CoreNestedStackProps#stackTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackTimeout?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "@aws-cdk/core!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stackTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!CoreStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CoreStack extends "
            },
            {
              "kind": "Reference",
              "text": "Stack",
              "canonicalReference": "@aws-cdk/core!Stack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!CoreStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CoreStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreStackProps",
                  "canonicalReference": "full-stack-pattern!CoreStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreStack#certificate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificate: "
                },
                {
                  "kind": "Reference",
                  "text": "ICertificate",
                  "canonicalReference": "@aws-cdk/aws-certificatemanager!ICertificate:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "certificate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!CoreStack#hostedZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZone: "
                },
                {
                  "kind": "Reference",
                  "text": "IHostedZone",
                  "canonicalReference": "@aws-cdk/aws-route53!IHostedZone:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostedZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!CoreStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CoreStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "StackProps",
              "canonicalReference": "@aws-cdk/core!StackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CoreConstructProps",
              "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "CoreStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!DynamoAttribute:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DynamoAttribute = "
            },
            {
              "kind": "Content",
              "text": "{\n    [attributeName: string]: "
            },
            {
              "kind": "Reference",
              "text": "AttributeType",
              "canonicalReference": "full-stack-pattern!~AttributeType:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DynamoAttribute",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!exec:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function exec(command: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", logToConsole?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "command",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "logToConsole",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "exec"
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!existingLogGroups:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "existingLogGroups: "
            },
            {
              "kind": "Content",
              "text": "({ prefix, profile, region }: {\n    region?: string | undefined;\n    profile?: string | undefined;\n    prefix?: string | undefined;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string[]>"
            }
          ],
          "releaseTag": "Public",
          "name": "existingLogGroups",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!FullNestedStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FullNestedStack extends "
            },
            {
              "kind": "Reference",
              "text": "Stack",
              "canonicalReference": "@aws-cdk/core!Stack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FullNestedStack",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullNestedStack#addConfigFile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addConfigFile: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackConstruct",
                  "canonicalReference": "full-stack-pattern!FullStackConstruct:class"
                },
                {
                  "kind": "Content",
                  "text": "['addConfigFile']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addConfigFile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullNestedStack#cdn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cdn?: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNNestedStack",
                  "canonicalReference": "full-stack-pattern!CDNNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cdn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullNestedStack#cognito:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cognito?: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoNestedStack",
                  "canonicalReference": "full-stack-pattern!CognitoNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cognito",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullNestedStack#core:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core?: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreNestedStack",
                  "canonicalReference": "full-stack-pattern!CoreNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!FullNestedStack.create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackProps",
                  "canonicalReference": "full-stack-pattern!FullStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        profile?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FullNestedStack",
                  "canonicalReference": "full-stack-pattern!FullNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullNestedStack#serverless:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverless?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessNestedStack",
                  "canonicalReference": "full-stack-pattern!ServerlessNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverless",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!FullNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FullNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FullStackConstructProps",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'nested'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedStackProps",
              "canonicalReference": "@aws-cdk/core!NestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'timeout' | 'removalPolicy'> "
            }
          ],
          "releaseTag": "Public",
          "name": "FullNestedStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!FullStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FullStack extends "
            },
            {
              "kind": "Reference",
              "text": "FullStackConstruct",
              "canonicalReference": "full-stack-pattern!FullStackConstruct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FullStack",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!FullStack.create:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static create(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackProps",
                  "canonicalReference": "full-stack-pattern!FullStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        profile?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FullStack",
                  "canonicalReference": "full-stack-pattern!FullStack:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  }
                }
              ],
              "name": "create"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!FullStackCognitoProp:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FullStackCognitoProp = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CognitoConstructProps",
              "canonicalReference": "full-stack-pattern!CognitoConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'prefix'> & {\n    loginCallbackPath?: string;\n    logoutCallbackPath?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FullStackCognitoProp",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!FullStackConstruct:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class FullStackConstruct extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FullStackConstruct",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!FullStackConstruct:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `FullStackConstruct` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackConstructProps",
                  "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#addConfigFile:member(1)",
              "docComment": "/**\n * Builds and uploads a configuration file to the ui bucket\n *\n * See [ConfigFile](https://full-stack-pattern.matthewkeil.com/docs/constructs/configFile) for more information\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addConfigFile({ config, fileName, mergeExisting, deploymentRole }: "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ConfigFileProps",
                  "canonicalReference": "full-stack-pattern!ConfigFileProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, unknown>>, 'fileName' | 'mergeExisting' | 'config' | 'deploymentRole'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ config, fileName, mergeExisting, deploymentRole }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                }
              ],
              "name": "addConfigFile"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#baseDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#cdn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cdn?: "
                },
                {
                  "kind": "Reference",
                  "text": "CDNStack",
                  "canonicalReference": "full-stack-pattern!CDNStack:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CDNNestedStack",
                  "canonicalReference": "full-stack-pattern!CDNNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cdn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#cognito:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cognito?: "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoStack",
                  "canonicalReference": "full-stack-pattern!CognitoStack:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CognitoNestedStack",
                  "canonicalReference": "full-stack-pattern!CognitoNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cognito",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#core:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core?: "
                },
                {
                  "kind": "Reference",
                  "text": "CoreStack",
                  "canonicalReference": "full-stack-pattern!CoreStack:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "CoreNestedStack",
                  "canonicalReference": "full-stack-pattern!CoreNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!FullStackConstruct.lookupExistingResources:member(1)",
              "docComment": "/**\n * Is a helper function for the constructor. You pass in the props you want to use for the FullStackConstruct. This function will fill some pieces from the environment, for example the hostedZoneId.\n *\n * Calls the underlying stacks to do their own lookups. For more information see the docs for each stack\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static lookupExistingResources(props: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackConstructProps",
                  "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        profile?: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FullStackConstructProps",
                  "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "lookupExistingResources"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!FullStackConstruct#serverless:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverless?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessStack",
                  "canonicalReference": "full-stack-pattern!ServerlessStack:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessNestedStack",
                  "canonicalReference": "full-stack-pattern!ServerlessNestedStack:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverless",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FullStackConstructProps "
            }
          ],
          "releaseTag": "Public",
          "name": "FullStackConstructProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#cdn:member",
              "docComment": "/**\n * Settings for the [CDNConstruct](https://full-stack-pattern.matthewkeil.com/docs/cdn/cdnConstruct)\n *\n * Optional: If you do not provide this a CDNConstruct will not be built\n *\n * prefix, stage and rootDomain are not available on fullStackProps.cdn They are passed in from fullStackProp.prefix and fullStackProp.stage and fullStackProp.rootDomain\n *\n * @param cdn - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cdn?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CDNConstructProps",
                  "canonicalReference": "full-stack-pattern!CDNConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'prefix' | 'stage' | 'rootDomain'>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cdn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#cognito:member",
              "docComment": "/**\n * Settings for the [CognitoConstruct](https://full-stack-pattern.matthewkeil.com/docs/cognito/cognitoConstruct)\n *\n * rootDomain is not available on core, it is passed in from fullStackProp.rootDomain\n *\n * @param serverless - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cognito?: "
                },
                {
                  "kind": "Reference",
                  "text": "FullStackCognitoProp",
                  "canonicalReference": "full-stack-pattern!FullStackCognitoProp:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "cognito",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#core:member",
              "docComment": "/**\n * Settings for the [CoreConstruct](https://full-stack-pattern.matthewkeil.com/docs/core/coreConstruct)\n *\n * Optional: If you do not provide a `rootDomain` this will be ignored and a CoreConstruct will not be built\n *\n * rootDomain is not available on core, it is passed in from fullStackProp.rootDomain\n *\n * @param core - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "core?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CoreConstructProps",
                  "canonicalReference": "full-stack-pattern!CoreConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'rootDomain'>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "core",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#env:member",
              "docComment": "/**\n * The env for the stacks\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "env: "
                },
                {
                  "kind": "Reference",
                  "text": "Required",
                  "canonicalReference": "!Required:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Environment",
                  "canonicalReference": "@aws-cdk/core!Environment:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "env",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#nested:member",
              "docComment": "/**\n * Builds the component stacks as either Stack's or NestedStack's\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nested?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nested",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#noCognito:member",
              "docComment": "/**\n * No CognitoConstruct will be built\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noCognito?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noCognito",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#prefix:member",
              "docComment": "/**\n * The prefix to use with resource names. If `prefix` and `name` are provided then the apiName will be `${prefix}-${name}`. If no name is provided then the apiName will be `prefix`. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#removalPolicy:member",
              "docComment": "/**\n * RemovalPolicy to apply to all resources. If a RemovalPolicy prop is provided for a specific resource, ie the `props.core.removalPolicy`, it will override this value\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removalPolicy?: "
                },
                {
                  "kind": "Reference",
                  "text": "RemovalPolicy",
                  "canonicalReference": "@aws-cdk/core!RemovalPolicy:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "removalPolicy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#rootDomain:member",
              "docComment": "/**\n * The url/rootDomain for the HostedZone. If you don not provide a rootDomain a CoreConstruct will not be created.\n *\n * @example\n *\n * If you are hosting the ui at `www.example.com` and the api at `api.example.com` the rootDomain would be `example.com` This is similar for branches, such as `dev.api.example.com` and `dev.example.com`. The rootDomain will still be `example.com`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "rootDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#serverless:member",
              "docComment": "/**\n * Settings for the [ServerlessConstruct](https://full-stack-pattern.matthewkeil.com/docs/serverless/serverlessConstruct)\n *\n * Optional: If you do not provide this a ServerlessConstruct will not be built\n *\n * prefix, stage are not available on fullStackProps.serverless, they are passed in from fullStackProp.prefix and fullStackProp.stage\n *\n * @param serverless - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverless?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessConstructProps",
                  "canonicalReference": "full-stack-pattern!ServerlessConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'prefix' | 'stage'>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "serverless",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#stackTimeout:member",
              "docComment": "/**\n * This is the NestedStack stack timeout that will be applied. For non-nested stacks, this is ignored.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackTimeout?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "@aws-cdk/core!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stackTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#stage:member",
              "docComment": "/**\n * The deployment stage name. This will be used to prefix all resources.\n *\n * @default \"prod\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#subDomain:member",
              "docComment": "/**\n * Optional: A url subDomain to host the application at. Will still use the HostedZone at rootDomain but all of this application will be hosted at the subDomain\n *\n * Assume your HostedZone is at `rootDomain: \"example.com\"` and you want to host at `subDomain: \"best-app\"`\n *\n * This subDomain is the new \"default\" root of the application - the UI will be at `best-app.example.com` and the dev branch will be at `dev.best-app.example.com`. Optionally you can build `www.best-app.example.com`\n *\n * - The Api will be at `api.best-app.example.com` and the dev api will be at `dev.api.best-app.example.com`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps#uiDevPort:member",
              "docComment": "/**\n * For standing the development server and configuring cors during development. This is the localhost:PORT that serves your frontend\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uiDevPort?: "
                },
                {
                  "kind": "Content",
                  "text": "number | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "uiDevPort",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!FullStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FullStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FullStackConstructProps",
              "canonicalReference": "full-stack-pattern!FullStackConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'nested' | 'stackTimeout'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StackProps",
              "canonicalReference": "@aws-cdk/core!StackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'env'> "
            }
          ],
          "releaseTag": "Public",
          "name": "FullStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!getApiGatewayAccountRole:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getApiGatewayAccountRole: "
            },
            {
              "kind": "Content",
              "text": "({ profile, region }: {\n    region: string;\n    profile?: string | undefined;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string | undefined>"
            }
          ],
          "releaseTag": "Public",
          "name": "getApiGatewayAccountRole",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!getCertArnForDomain:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCertArnForDomain({ baseDomain, profile, region }: "
            },
            {
              "kind": "Content",
              "text": "{\n    region: string;\n    profile?: string;\n    baseDomain: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ baseDomain, profile, region }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "getCertArnForDomain"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!getConfig:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getConfig<S extends "
            },
            {
              "kind": "Reference",
              "text": "BaseStageConfig",
              "canonicalReference": "full-stack-pattern!~BaseStageConfig:interface"
            },
            {
              "kind": "Content",
              "text": ", T extends "
            },
            {
              "kind": "Reference",
              "text": "BaseStaticConfig",
              "canonicalReference": "full-stack-pattern!~BaseStaticConfig:interface"
            },
            {
              "kind": "Content",
              "text": ">(stages?: "
            },
            {
              "kind": "Content",
              "text": "S[]"
            },
            {
              "kind": "Content",
              "text": ", staticConfig?: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(branch?: string | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<S & T & {\n    stage: string;\n    prefix: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "stages",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            },
            {
              "parameterName": "staticConfig",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getConfig"
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!getHostedZoneIdForDomain:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getHostedZoneIdForDomain: "
            },
            {
              "kind": "Content",
              "text": "({ profile, region, rootDomain }: {\n    profile?: string | undefined;\n    region?: string | undefined;\n    rootDomain: string;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string | undefined>"
            }
          ],
          "releaseTag": "Public",
          "name": "getHostedZoneIdForDomain",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!getLocalGitBranch:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getLocalGitBranch(): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getLocalGitBranch"
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!GsiProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GsiProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GlobalSecondaryIndexProps",
              "canonicalReference": "@aws-cdk/aws-dynamodb!GlobalSecondaryIndexProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmittedIndexProps",
              "canonicalReference": "full-stack-pattern!OmittedIndexProps:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "GsiProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!GsiProps#partitionKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partitionKey: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamoAttribute",
                  "canonicalReference": "full-stack-pattern!DynamoAttribute:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "partitionKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!GsiProps#sortKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortKey?: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamoAttribute",
                  "canonicalReference": "full-stack-pattern!DynamoAttribute:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!handler:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "handler: "
            },
            {
              "kind": "Content",
              "text": "import(\"aws-lambda\")."
            },
            {
              "kind": "Reference",
              "text": "CloudFormationCustomResourceHandler",
              "canonicalReference": "@types/aws-lambda!CloudFormationCustomResourceHandler:type"
            }
          ],
          "releaseTag": "Public",
          "name": "handler",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!HttpMethod:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HttpMethod = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "httpMethods",
              "canonicalReference": "full-stack-pattern!httpMethods:var"
            },
            {
              "kind": "Content",
              "text": "[number] | "
            },
            {
              "kind": "Reference",
              "text": "Lowercase",
              "canonicalReference": "!Lowercase:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "httpMethods",
              "canonicalReference": "full-stack-pattern!httpMethods:var"
            },
            {
              "kind": "Content",
              "text": "[number]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HttpMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!httpMethods:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "httpMethods: "
            },
            {
              "kind": "Content",
              "text": "readonly [\"GET\", \"PUT\", \"POST\", \"PATCH\", \"DELETE\", \"HEAD\", \"OPTIONS\"]"
            }
          ],
          "releaseTag": "Public",
          "name": "httpMethods",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!isHttpMethod:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isHttpMethod(value: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "value",
              "canonicalReference": "full-stack-pattern!~value"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "HttpMethod",
              "canonicalReference": "full-stack-pattern!HttpMethod:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "isHttpMethod"
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!Lambda:class",
          "docComment": "/**\n * Creates and configures\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Lambda extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Lambda",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!Lambda:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Lambda` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdaProps",
                  "canonicalReference": "full-stack-pattern!LambdaProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Lambda#addApiEvent:member(1)",
              "docComment": "/**\n * - adds an api event to the lambda: hooks up apiGateway to trigger the lambda and adds the necessary permissions.\n *\n * - builds an express server to server the lambdas during development. devServer supports hot reload and watch functionality. see [convert-lambda-to-express](https://www.npmjs.com/package/convert-lambda-to-express) for more information\n *\n * - can, optionally, pass in the RestApi that you want associated to the function through the LambdaProps.api property when new'ing the Lambda. If no api is passed it looks at Stack.of(this).node.tryFindChild('Api') base stack and will use the first RestApi it finds if one exists. If no api is passed to the constructor, nor is there a RestApi resource in the stack, one will be created. It will be built so all subsequent Lambdas will be able to find and use the same api.\n *\n * If api is looked up then it can be anywhere in your code as long as its built before trying to add an ApiEvent. Note that building the Lambda with an event in the constructor props will call the .addApiEvent method under the hood. The logicalId for the lookup method must be 'Api'.\n *\n * If you want to use a different Api logicalId, you can pass in the Api object directly to the constructor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addApiEvent(pathConfig: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiEvent",
                  "canonicalReference": "full-stack-pattern!ApiEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Lambda",
                  "canonicalReference": "full-stack-pattern!Lambda:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pathConfig",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addApiEvent"
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Lambda#addPermission:member(1)",
              "docComment": "/**\n * simplifies the underlying `lambda.Function.prototype.addPermission`\n *\n * - adds ability to just pass and arn as a string. automatically sets up the principal - adds the invoke action\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addPermission(principalOrArn: "
                },
                {
                  "kind": "Reference",
                  "text": "PrincipalBase",
                  "canonicalReference": "@aws-cdk/aws-iam!PrincipalBase:class"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", permission?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Permission",
                  "canonicalReference": "@aws-cdk/aws-lambda!Permission:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "principalOrArn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "permission",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  }
                }
              ],
              "name": "addPermission"
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Lambda#addWarmingEvent:member(1)",
              "docComment": "/**\n * simplifies warming the function. Timing will be base by the Rule that gets passed. Event will emit the { warmer: true } object to the function\n *\n * code can easily check for warming event and return early\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addWarmingEvent(rule: "
                },
                {
                  "kind": "Reference",
                  "text": "Rule",
                  "canonicalReference": "@aws-cdk/aws-events!Rule:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rule",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addWarmingEvent"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Lambda#associateTable:member(1)",
              "docComment": "/**\n * Applies table.grantReadWriteData(role) for the function role if one was created.\n *\n * Adds table name to environment variables. As an example when passing in `table: \"good-stuff-table\"` will, by default, set actual tableName as: - `process.env.TABLE_NAME=client-project-env-good-stuff-table` - `process.env.GOOD_STUFF_TABLE=client-project-env-good-stuff-table`\n *\n * You can override this with `tableEnvKey: TABLE_ENV_KEY` to create the environment variables as: `process.env.TABLE_NAME` `process.env.TABLE_ENV_KEY`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "associateTable({ table, tables, tableEnvKey }: "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LambdaProps",
                  "canonicalReference": "full-stack-pattern!LambdaProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'table' | 'tables' | 'tableEnvKey'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ table, tables, tableEnvKey }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ],
              "name": "associateTable"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Reference",
                  "text": "Code",
                  "canonicalReference": "@aws-cdk/aws-lambda!Code:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#function:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "function: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseLambda",
                  "canonicalReference": "@aws-cdk/aws-lambda!Function:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "function",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#logGroup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "ILogGroup",
                  "canonicalReference": "@aws-cdk/aws-logs!ILogGroup:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "logGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#policy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "policy?: "
                },
                {
                  "kind": "Reference",
                  "text": "Policy",
                  "canonicalReference": "@aws-cdk/aws-iam!Policy:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "policy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly props: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdaProps",
                  "canonicalReference": "full-stack-pattern!LambdaProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambda#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!LambdaProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LambdaProps extends "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FunctionProps",
              "canonicalReference": "@aws-cdk/aws-lambda!FunctionProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'functionName' | 'role' | 'code' | 'events' | 'layers'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RoleProps",
              "canonicalReference": "@aws-cdk/aws-iam!RoleProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'roleName' | 'assumedBy'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PolicyProps",
              "canonicalReference": "@aws-cdk/aws-iam!PolicyProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'policyName' | 'roles'>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LogGroupProps",
              "canonicalReference": "@aws-cdk/aws-logs!LogGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'logGroupName'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "LambdaProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#api:member",
              "docComment": "/**\n * The Api to use with all ApiEvents. If no api is passed it looks at Stack.of(this).node.tryFindChild('Api') base stack and will use the first RestApi it finds if one exists. If no api is passed to the constructor, nor is there a RestApi resource in the stack, one will be created. It will be built so all subsequent Lambdas will be able to find and use the same api.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#canInvoke:member",
              "docComment": "/**\n * Array of principals that can invoke the lambda. Can pass a string arn, an IRole, or any Principal construct and will create the AWS::Lambda::Permission for you.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canInvoke?: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "PrincipalBase",
                  "canonicalReference": "@aws-cdk/aws-iam!PrincipalBase:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string)[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "canInvoke",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#code:member",
              "docComment": "/**\n * Code to use with the lambda. Can pass a string to the absolute path of the code folder and the AssetCode will be created for you. You can also pass in any Construct that extends Code ie. InlineCode, AssetCode, S3Code, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Code",
                  "canonicalReference": "@aws-cdk/aws-lambda!Code:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n *\n * @default false (resources will have their logicalId's set by the library and not cdk)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#events:member",
              "docComment": "/**\n * Similar to the underlying LambdaProps.events but adds support for the ApiEvent from this library. Works in conjunction with the Api construct.\n *\n * ApiEvents will build a dev server that can be run locally through the use of [convert-lambda-to-express](https://www.npmjs.com/package/convert-lambda-to-express) library\n *\n * See [convert-lambda-to-express](https://www.npmjs.com/package/convert-lambda-to-express) for more information about how to use this feature.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "events?: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "IEventSource",
                  "canonicalReference": "@aws-cdk/aws-lambda!IEventSource:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ApiEvent",
                  "canonicalReference": "full-stack-pattern!ApiEvent:interface"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "events",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#existingLogGroups:member",
              "docComment": "/**\n * Handy feature to plug into existing logGroups. Pass an array of strings that are the logGroup names in the target account and any log groups that exist will not be created. ie no thrown errors, and stack rollbacks, for log groups that exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "existingLogGroups?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "existingLogGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#layers:member",
              "docComment": "/**\n * LayerVersions to use with the lambda. Can pass in a strings, that are absolute path to the layer folder, and the AssetCode will be made for the directory. Can also pass in an array of LayerVersion constructs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "layers?: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "LayerVersion",
                  "canonicalReference": "@aws-cdk/aws-lambda!LayerVersion:class"
                },
                {
                  "kind": "Content",
                  "text": " | string)[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "layers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#loggingLevel:member",
              "docComment": "/**\n * Adds process.env.LOGGING_LEVEL to the lambda environment. Can be set to: 'DEBUG' | 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loggingLevel?: "
                },
                {
                  "kind": "Reference",
                  "text": "LogLevel",
                  "canonicalReference": "full-stack-pattern!LogLevel:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "loggingLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#name:member",
              "docComment": "/**\n * The name of the resources to make. Generally this is a few short words. When passing `prefix` and `name` the physical name of resources will take the format of `${prefix}-${name}`. If just name is passed they will just be the value of `name`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#prefix:member",
              "docComment": "/**\n * The prefix to use for the resources. Will prefix all resource names with this value. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#role:member",
              "docComment": "/**\n * The IRole or arn of the service role. If a LambdaProps.role is passed no IAM will be created\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Reference",
                  "text": "IRole",
                  "canonicalReference": "@aws-cdk/aws-iam!IRole:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#table:member",
              "docComment": "/**\n * Associates a table with the lambda function. Can be passed as a Table or a string. When using a string must also pass a Tables object to the `tables` prop. This is mostly a convention for use with the Lambdas and Tables constructs so its easier to created the lambda definitions. See the LambdasProps.tables for more information.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "table?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITable",
                  "canonicalReference": "@aws-cdk/aws-dynamodb!ITable:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "table",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#tableEnvKey:member",
              "docComment": "/**\n * By default, this construct sets the tableName to the environment for you.\n *\n * If a name of 'good-stuff-table' is used, will set environment variables as: - `process.env.TABLE_NAME = \"full-table-name-for-sdk\"` - `process.env.GOOD_STUFF_TABLE = \"full-table-name-for-sdk\"`\n *\n * You can override this with `tableEnvKey: \"SOME_ENV_KEY\"` to create the environment variables as: - `process.env.TABLE_NAME = \"full-table-name-for-sdk\"` - `process.env.SOME_ENV_KEY = \"full-table-name-for-sdk\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableEnvKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tableEnvKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#tables:member",
              "docComment": "/**\n * Tables construct to make use of LambdaProps.table as a string. Will do a lookup to find the table from the tables object using the string as the name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tables",
                  "canonicalReference": "full-stack-pattern!Tables:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdaProps#warmingEvent:member",
              "docComment": "/**\n * simplifies warming the function. Timing will be base by the Rule that gets passed. Event will emit the { warmer: true } object to the function\n *\n * code can easily check for warming event and return early\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warmingEvent?: "
                },
                {
                  "kind": "Reference",
                  "text": "Rule",
                  "canonicalReference": "@aws-cdk/aws-events!Rule:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "warmingEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 21
            },
            {
              "startIndex": 22,
              "endIndex": 28
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!Lambdas:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Lambdas extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Lambdas",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!Lambdas:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Lambdas` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdasProps",
                  "canonicalReference": "full-stack-pattern!LambdasProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Lambdas#addLambda:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addLambda(props: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdasPropsOptionalRuntimeAndCode",
                  "canonicalReference": "full-stack-pattern!LambdasPropsOptionalRuntimeAndCode:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Lambda",
                  "canonicalReference": "full-stack-pattern!Lambda:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addLambda"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambdas#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Lambdas#resources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resources: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [name: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Lambda",
                  "canonicalReference": "full-stack-pattern!Lambda:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!LambdasProps:interface",
          "docComment": "/**\n * Any prop that can be set on an individual lambda can be set on this construct and all lambdas made in this group will have those values. Only the props 'name', 'description' and 'handler' cannot be set as a group as thats not possible.\n *\n * 'runtime' and 'code' are Omitted as they are allowed as optional props but required by the Lambda construct. See information below for each of those\n *\n * By default the individual props will get merged in with the ones set for the group and anything specifically set on one lambda will supercede the group values. ie if runtime is set on the LambdasProps as Runtime.NODEJS_14_X and on an individual lambda, in the LambdasProps.lambdas array, as Runtime.NODEJS_10_X, then the function will use node 10.X\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LambdasProps extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LambdaProps",
              "canonicalReference": "full-stack-pattern!LambdaProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'name' | 'description' | 'handler' | 'runtime' | 'code'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "LambdasProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdasProps#code:member",
              "docComment": "/**\n * Code to use with all lambdas in this group. Can pass a string to the absolute path of the code folder and the AssetCode will be created for you. You can also pass in any Construct that extends Code ie: InlineCode, AssetCode, S3Code, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "code?: "
                },
                {
                  "kind": "Reference",
                  "text": "Code",
                  "canonicalReference": "@aws-cdk/aws-lambda!Code:class"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdasProps#lambdas:member",
              "docComment": "/**\n * An array of LambdaProps objects where the `runtime` and `code` are optional While technically required they can be optionally passed as shared props and that will get merged with each set of individual props and creation time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lambdas?: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdasPropsOptionalRuntimeAndCode",
                  "canonicalReference": "full-stack-pattern!LambdasPropsOptionalRuntimeAndCode:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lambdas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdasProps#runtime:member",
              "docComment": "/**\n * Runtime to use with all lambdas in this group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtime?: "
                },
                {
                  "kind": "Reference",
                  "text": "Runtime",
                  "canonicalReference": "@aws-cdk/aws-lambda!Runtime:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "runtime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LambdasProps#tables:member",
              "docComment": "/**\n * Can pass a Tables object to the Lambdas object. That was you can use LambdaProps.table as a string to reference the table that should be associated. Makes building the lambdas array easier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tables",
                  "canonicalReference": "full-stack-pattern!Tables:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!LambdasPropsOptionalRuntimeAndCode:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LambdasPropsOptionalRuntimeAndCode = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LambdaProps",
              "canonicalReference": "full-stack-pattern!LambdaProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'runtime' | 'code'> & {\n    code?: "
            },
            {
              "kind": "Reference",
              "text": "Code",
              "canonicalReference": "@aws-cdk/aws-lambda!Code:class"
            },
            {
              "kind": "Content",
              "text": ";\n    runtime?: "
            },
            {
              "kind": "Reference",
              "text": "Runtime",
              "canonicalReference": "@aws-cdk/aws-lambda!Runtime:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LambdasPropsOptionalRuntimeAndCode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!listTableNames:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "listTableNames: "
            },
            {
              "kind": "Content",
              "text": "({ prefix, profile, region }: {\n    region?: string | undefined;\n    profile?: string | undefined;\n    prefix?: string | undefined;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<string[]>"
            }
          ],
          "releaseTag": "Public",
          "name": "listTableNames",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!LogLevel:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LogLevel = "
            },
            {
              "kind": "Content",
              "text": "'DEBUG' | 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LogLevel",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!LsiProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LsiProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LocalSecondaryIndexProps",
              "canonicalReference": "@aws-cdk/aws-dynamodb!LocalSecondaryIndexProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmittedIndexProps",
              "canonicalReference": "full-stack-pattern!OmittedIndexProps:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "LsiProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!LsiProps#sortKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortKey: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamoAttribute",
                  "canonicalReference": "full-stack-pattern!DynamoAttribute:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sortKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!mergeProps:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "mergeProps: "
            },
            {
              "kind": "Content",
              "text": "<T extends "
            },
            {
              "kind": "Reference",
              "text": "IObject",
              "canonicalReference": "full-stack-pattern!~IObject:interface"
            },
            {
              "kind": "Content",
              "text": "[]>(...objects: T) => "
            },
            {
              "kind": "Reference",
              "text": "Intersection",
              "canonicalReference": "full-stack-pattern!~Intersection:type"
            },
            {
              "kind": "Content",
              "text": "<T[number]>"
            }
          ],
          "releaseTag": "Public",
          "name": "mergeProps",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!Mutable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Mutable<T extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    -readonly [K in keyof T]: T[K];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Mutable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "full-stack-pattern!normalizeDomain:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "normalizeDomain: "
            },
            {
              "kind": "Content",
              "text": "(domain?: string) => string"
            }
          ],
          "releaseTag": "Public",
          "name": "normalizeDomain",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "full-stack-pattern!OmittedIndexProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OmittedIndexProps = "
            },
            {
              "kind": "Content",
              "text": "'partitionKey' | 'sortKey'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OmittedIndexProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!ServerlessConstruct:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerlessConstruct extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessConstruct",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServerlessConstruct` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessConstructProps",
                  "canonicalReference": "full-stack-pattern!ServerlessConstructProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct#domainUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domainUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "domainUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct#lambdas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lambdas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Lambdas",
                  "canonicalReference": "full-stack-pattern!Lambdas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lambdas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct#subDomain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessConstruct#tables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tables",
                  "canonicalReference": "full-stack-pattern!Tables:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ServerlessConstructProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServerlessConstructProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ApiProps",
              "canonicalReference": "full-stack-pattern!ApiProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'description' | 'domainName'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TablesProps",
              "canonicalReference": "full-stack-pattern!TablesProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LambdasProps",
              "canonicalReference": "full-stack-pattern!LambdasProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'tables'> "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessConstructProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps#baseDomain:member",
              "docComment": "/**\n * The url/rootDomain for the HostedZone. If you don not provide a rootDomain a CoreConstruct will not be created.\n *\n * @example\n *\n * If you are hosting the ui at `www.example.com` and the api at `api.example.com` the rootDomain would be `example.com` This is similar for branches, such as `dev.api.example.com` and `dev.example.com`. The rootDomain will still be `example.com`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps#certificate:member",
              "docComment": "/**\n * For custom domain names. Required when using a rootDomain.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "certificate?: "
                },
                {
                  "kind": "Reference",
                  "text": "ICertificate",
                  "canonicalReference": "@aws-cdk/aws-certificatemanager!ICertificate:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "certificate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps#hostedZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostedZone?: "
                },
                {
                  "kind": "Reference",
                  "text": "IHostedZone",
                  "canonicalReference": "@aws-cdk/aws-route53!IHostedZone:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "hostedZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps#subDomain:member",
              "docComment": "/**\n * The api subDomain\n *\n * @default api\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subDomain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "subDomain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!ServerlessNestedStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerlessNestedStack extends "
            },
            {
              "kind": "Reference",
              "text": "NestedStack",
              "canonicalReference": "@aws-cdk/core!NestedStack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessNestedStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServerlessNestedStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessNestedStackProps",
                  "canonicalReference": "full-stack-pattern!ServerlessNestedStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStack#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStack#domain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStack#lambdas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lambdas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Lambdas",
                  "canonicalReference": "full-stack-pattern!Lambdas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lambdas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStack#tables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tables",
                  "canonicalReference": "full-stack-pattern!Tables:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ServerlessNestedStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServerlessNestedStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NestedStackProps",
              "canonicalReference": "@aws-cdk/core!NestedStackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'removalPolicy' | 'timeout' | 'parameters'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ServerlessConstructProps",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessNestedStackProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!ServerlessNestedStackProps#stackTimeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackTimeout?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "@aws-cdk/core!Duration:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "stackTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!ServerlessStack:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ServerlessStack extends "
            },
            {
              "kind": "Reference",
              "text": "Stack",
              "canonicalReference": "@aws-cdk/core!Stack:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessStack",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!ServerlessStack:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ServerlessStack` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "ServerlessStackProps",
                  "canonicalReference": "full-stack-pattern!ServerlessStackProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessStack#api:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "api?: "
                },
                {
                  "kind": "Reference",
                  "text": "Api",
                  "canonicalReference": "full-stack-pattern!Api:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessStack#domain:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "domain?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "domain",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessStack#lambdas:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lambdas?: "
                },
                {
                  "kind": "Reference",
                  "text": "Lambdas",
                  "canonicalReference": "full-stack-pattern!Lambdas:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lambdas",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!ServerlessStack#tables:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "Tables",
                  "canonicalReference": "full-stack-pattern!Tables:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!ServerlessStackProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServerlessStackProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "StackProps",
              "canonicalReference": "@aws-cdk/core!StackProps:interface"
            },
            {
              "kind": "Content",
              "text": ", 'description'>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ServerlessConstructProps",
              "canonicalReference": "full-stack-pattern!ServerlessConstructProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ServerlessStackProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!Table:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Table extends "
            },
            {
              "kind": "Reference",
              "text": "BaseTable",
              "canonicalReference": "@aws-cdk/aws-dynamodb!Table:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Table",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!Table:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Table` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "TableProps",
                  "canonicalReference": "full-stack-pattern!TableProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Table#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!TableProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableProps extends "
            },
            {
              "kind": "Reference",
              "text": "Mutable",
              "canonicalReference": "full-stack-pattern!Mutable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BaseTableProps",
              "canonicalReference": "@aws-cdk/aws-dynamodb!TableProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmittedIndexProps",
              "canonicalReference": "full-stack-pattern!OmittedIndexProps:type"
            },
            {
              "kind": "Content",
              "text": " | 'tableName'>> "
            }
          ],
          "releaseTag": "Public",
          "name": "TableProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#dontOverrideLogicalId:member",
              "docComment": "/**\n * Option to not use fixed logicalId's for the RestApi resource. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dontOverrideLogicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dontOverrideLogicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#gsi:member",
              "docComment": "/**\n * Array of Local Secondary Indexes. LsiProps extend LocalSecondaryIndexProps but use this constructs syntax for the partitionKey and sortKey.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gsi?: "
                },
                {
                  "kind": "Reference",
                  "text": "GsiProps",
                  "canonicalReference": "full-stack-pattern!GsiProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gsi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#logicalId:member",
              "docComment": "/**\n * LogicalId for the RestApi resource for in-place upgrades. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "logicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#lsi:member",
              "docComment": "/**\n * Array of Local Secondary Indexes. LsiProps extend LocalSecondaryIndexProps but use this constructs syntax for the sortKey.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lsi?: "
                },
                {
                  "kind": "Reference",
                  "text": "LsiProps",
                  "canonicalReference": "full-stack-pattern!LsiProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lsi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#name:member",
              "docComment": "/**\n * The name of the resource to make. Generally this is a few short words. When passing `prefix` and `name` the physical name of resources will take the format of `${prefix}-${name}`. If just name is passed it will just be the value of `name`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#partitionKey:member",
              "docComment": "/**\n * Partition key for the table. Uses the format of:\n * ```typescript\n * type DynamoAttribute = { [attributeName: string]: 'string' | 'number' | 'boolean' }\n *\n * // Example:\n * partitionKey: {\n *   id: 'string',\n * }\n *\n * // Instead of natively:\n * partitionKey: {\n *   name: 'id',\n *   type: AttributeType.STRING\n * }\n * ```\n *\n * I find this syntax a bit verbose and prefer to not need to import the enum into my projects so I shortened the syntax.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partitionKey: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamoAttribute",
                  "canonicalReference": "full-stack-pattern!DynamoAttribute:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "partitionKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#prefix:member",
              "docComment": "/**\n * The prefix to use for the resources. Will prefix all resource names with this value. For more info, see [Naming](https://full-stack-pattern.matthewkeil.com/docs/naming)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TableProps#sortKey:member",
              "docComment": "/**\n * Sort key for the table. Uses the format of:\n * ```typescript\n * type DynamoAttribute = { [attributeName: string]: 'string' | 'number' | 'boolean' }\n *\n * // Example:\n * partitionKey: {\n *   id: 'string',\n * }\n *\n * // Instead of natively:\n * partitionKey: {\n *   name: 'id',\n *   type: AttributeType.STRING\n * }\n * ```\n *\n * I find this syntax a bit verbose and prefer to not need to import the enum into my projects so I shortened the syntax.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortKey?: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamoAttribute",
                  "canonicalReference": "full-stack-pattern!DynamoAttribute:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sortKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "full-stack-pattern!Tables:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Tables extends "
            },
            {
              "kind": "Reference",
              "text": "Construct",
              "canonicalReference": "@aws-cdk/core!Construct:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Tables",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "full-stack-pattern!Tables:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Tables` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(scope: "
                },
                {
                  "kind": "Reference",
                  "text": "Construct",
                  "canonicalReference": "@aws-cdk/core!Construct:class"
                },
                {
                  "kind": "Content",
                  "text": ", id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", props: "
                },
                {
                  "kind": "Reference",
                  "text": "TablesProps",
                  "canonicalReference": "full-stack-pattern!TablesProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "full-stack-pattern!Tables#addTable:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addTable(tableProps: "
                },
                {
                  "kind": "Reference",
                  "text": "TableProps",
                  "canonicalReference": "full-stack-pattern!TableProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Table",
                  "canonicalReference": "full-stack-pattern!Table:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tableProps",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "addTable"
            },
            {
              "kind": "Property",
              "canonicalReference": "full-stack-pattern!Tables#resources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resources: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [tableName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Table",
                  "canonicalReference": "full-stack-pattern!Table:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "full-stack-pattern!TablesProps:interface",
          "docComment": "/**\n * Any prop that can be set on an individual table can be set on this construct and all tables made in this group will have those values. Only the props 'tableName', 'name', 'logicalId', 'lsi' and 'gsi' are available, as those cannot be set for a group as they should be unique.\n *\n * By default the individual props will get merged in with the ones set for the group and anything specifically set on one table will supercede the group values. Ie, if billingMode is set on the TablesProps as BillingMode.PAY_PER_REQUEST and on an individual table, in the TablesProps.tables array, as BillingMode.PROVISIONED, then the function will use node BillingMode.PROVISIONED. See the Usage Example below.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TablesProps extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableProps",
              "canonicalReference": "full-stack-pattern!TableProps:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmittedTablesProps",
              "canonicalReference": "full-stack-pattern!~OmittedTablesProps:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "TablesProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "full-stack-pattern!TablesProps#tables:member",
              "docComment": "/**\n * Array of tablesProps to use for creation of multiple tables.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tables?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableProps",
                  "canonicalReference": "full-stack-pattern!TableProps:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!toCamel:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function toCamel(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toCamel"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!toEnv:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function toEnv(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toEnv"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!toKebab:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function toKebab(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toKebab"
        },
        {
          "kind": "Function",
          "canonicalReference": "full-stack-pattern!toPascal:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function toPascal(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "toPascal"
        }
      ]
    }
  ]
}
