---
name: On Push

on:
  - push

jobs:
  buildLintTest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['12', '14', '16']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org'

      - name: Extract Ref
        id: extract_ref
        shell: bash
        run: lib/get-ref.sh

      - name: Build, lint and test
        run: |
          npm ci
          npm run build
          npm run lint --if-present

      - uses: actions/upload-artifact@master
        if: ${{ matrix.node == '16' }}
        with:
          name: build artifacts
          path: dist/

  PublishVersion:
    runs-on: ubuntu-latest
    needs: buildLintTest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/download-artifact@master
        with:
          name: build artifacts
          path: dist

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

  PublishDocs:
    runs-on: ubuntu-latest
    needs: buildLintTest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: actions/download-artifact@master
        with:
          name: build artifacts
          path: dist

      - run: npm install --prefix docs
      - run: npm run build:docs

      - name: cdk synth
        run: BRANCH=master npm run cdk -- synth
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.REGION }}

      - name: cdk deploy
        run: BRANCH=master npm run cdk -- deploy
        env:
          BRANCH: ${{ secrets.BRANCH }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.REGION }}
